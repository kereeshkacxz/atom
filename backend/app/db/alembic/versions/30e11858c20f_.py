"""empty message

Revision ID: 30e11858c20f
Revises: 
Create Date: 2024-10-11 20:24:31.968405

"""
from typing import Sequence, Union

import sqlmodel
from app.config import getSettings
import uuid
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '30e11858c20f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "usertable",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("usertable", sa.Column("type", sqlmodel.sql.sqltypes.AutoString(), nullable=False))

    op.create_index(op.f("ix_usertable_email"), "usertable", ["email"], unique=True)

        # Создаем нового пользователя
    new_user = {
        "id": str(uuid.uuid4()),
        "username": "superadmin",
        "password": getSettings().PWD_CONTEXT.hash("superadmin"),
        "email": "superadmin@example.com",
        "type": "superadmin",
        "coin": 1,
    }

    # Создаем объект MetaData
    metadata = sa.MetaData()
    # Загружаем таблицу usertable
    usertable = sa.Table("usertable", metadata, autoload_with=op.get_bind())

    # Вставка нового пользователя в таблицу
    op.bulk_insert(usertable, [new_user])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_usertable_email"), table_name="usertable")
    op.drop_table("usertable")
    # ### end Alembic commands ###